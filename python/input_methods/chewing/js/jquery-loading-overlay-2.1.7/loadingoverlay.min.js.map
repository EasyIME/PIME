{"version":3,"sources":["loadingoverlay.js"],"names":["factory","define","amd","module","exports","require","jQuery","$","undefined","_defaults","background","backgroundClass","image","imageAnimation","imageAutoResize","imageResizeFactor","imageColor","imageClass","imageOrder","fontawesome","fontawesomeAnimation","fontawesomeAutoResize","fontawesomeResizeFactor","fontawesomeColor","fontawesomeOrder","custom","customAnimation","customAutoResize","customResizeFactor","customOrder","text","textAnimation","textAutoResize","textResizeFactor","textColor","textClass","textOrder","progress","progressAutoResize","progressResizeFactor","progressColor","progressClass","progressOrder","progressFixedPosition","progressSpeed","progressMin","progressMax","size","maxSize","minSize","direction","fade","resizeInterval","zIndex","_css","overlay","box-sizing","position","display","flex-wrap","align-items","justify-content","element","overflow","flex","element_svg","width","height","progress_fixed","left","progress_wrapper","top","progress_bar","_dataTemplate","count","container","settings","wholePage","resizeIntervalId","_whitelists","animations","progressPosition","_defaultValues","name","time","Show","_ParseSize","parseInt","_GetOverlay","data","_GetData","extend","is","class","css","toLowerCase","addClass","isArray","length","fill","stroke","_CreateElement","slice","append","children","find","ajax","url","type","dataType","global","done","html","background-image","background-position","background-repeat","background-size","appendTo","wrapper","bar","fixed","margin","min","parseFloat","max","speed","progressPositionParts","replace","split","_ValidateProgressPosition","value","units","fadeTo","_IntervalResize","setInterval","Hide","force","animate","opacity","clearInterval","this","remove","removeData","Resize","Text","hide","show","Progress","v","isFixed","pos","getBoundingClientRect","offset","innerWidth","innerHeight","c","window","Math","each","$this","resizeFactor","hasClass","document","body","contains","toggle","order","autoResize","animation","loadingoverlay_autoresize","loadingoverlay_resizefactor","animationName","animationTime","parts","_ValidateCssTime","_ValidateAnimation","animation-name","animation-duration","animation-timing-function","animation-iteration-count","isNaN","indexOf","LoadingOverlaySetup","LoadingOverlay","action","options","fn","join"],"mappings":"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","file":"loadingoverlay.min.js","sourcesContent":["/***************************************************************************************************\r\nLoadingOverlay - A flexible loading overlay jQuery plugin\r\n    Author          : Gaspare Sganga\r\n    Version         : 2.1.7\r\n    License         : MIT\r\n    Documentation   : https://gasparesganga.com/labs/jquery-loading-overlay/\r\n***************************************************************************************************/\r\n;(function(factory){\r\n    if (typeof define === \"function\" && define.amd) {\r\n        // AMD. Register as an anonymous module\r\n        define([\"jquery\"], factory);\r\n    } else if (typeof module === \"object\" && module.exports) {\r\n        // Node/CommonJS\r\n        factory(require(\"jquery\"));\r\n    } else {\r\n        // Browser globals\r\n        factory(jQuery);\r\n    }\r\n}(function($, undefined){\r\n    \"use strict\";\r\n    \r\n    // Default Settings\r\n    var _defaults = {\r\n        // Background\r\n        background              : \"rgba(255, 255, 255, 0.8)\",\r\n        backgroundClass         : \"\",\r\n        // Image\r\n        image                   : \"<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1000 1000'><circle r='80' cx='500' cy='90'/><circle r='80' cx='500' cy='910'/><circle r='80' cx='90' cy='500'/><circle r='80' cx='910' cy='500'/><circle r='80' cx='212' cy='212'/><circle r='80' cx='788' cy='212'/><circle r='80' cx='212' cy='788'/><circle r='80' cx='788' cy='788'/></svg>\",\r\n        imageAnimation          : \"2000ms rotate_right\",\r\n        imageAutoResize         : true,\r\n        imageResizeFactor       : 1,\r\n        imageColor              : \"#202020\",\r\n        imageClass              : \"\",\r\n        imageOrder              : 1,\r\n        // Font Awesome\r\n        fontawesome             : \"\",\r\n        fontawesomeAnimation    : \"\",\r\n        fontawesomeAutoResize   : true,\r\n        fontawesomeResizeFactor : 1,\r\n        fontawesomeColor        : \"#202020\",\r\n        fontawesomeOrder        : 2,\r\n        // Custom\r\n        custom                  : \"\",\r\n        customAnimation         : \"\",\r\n        customAutoResize        : true,\r\n        customResizeFactor      : 1,\r\n        customOrder             : 3,\r\n        // Text\r\n        text                    : \"\",\r\n        textAnimation           : \"\",\r\n        textAutoResize          : true,\r\n        textResizeFactor        : 0.5,\r\n        textColor               : \"#202020\",\r\n        textClass               : \"\",\r\n        textOrder               : 4,\r\n        // Progress\r\n        progress                : false,\r\n        progressAutoResize      : true,\r\n        progressResizeFactor    : 0.25,\r\n        progressColor           : \"#a0a0a0\",\r\n        progressClass           : \"\",\r\n        progressOrder           : 5,\r\n        progressFixedPosition   : \"\",\r\n        progressSpeed           : 200,\r\n        progressMin             : 0,\r\n        progressMax             : 100,\r\n        // Sizing\r\n        size                    : 50,\r\n        maxSize                 : 120,\r\n        minSize                 : 20,\r\n        // Misc\r\n        direction               : \"column\",\r\n        fade                    : true,\r\n        resizeInterval          : 50,\r\n        zIndex                  : 2147483647\r\n    };\r\n    \r\n    // Required CSS\r\n    var _css = {\r\n        overlay : {\r\n            \"box-sizing\"        : \"border-box\",\r\n            \"position\"          : \"relative\",\r\n            \"display\"           : \"flex\",\r\n            \"flex-wrap\"         : \"nowrap\",\r\n            \"align-items\"       : \"center\",\r\n            \"justify-content\"   : \"space-around\"\r\n        },\r\n        element : {\r\n            \"box-sizing\"        : \"border-box\",\r\n            \"overflow\"          : \"visible\",\r\n            \"flex\"              : \"0 0 auto\",\r\n            \"display\"           : \"flex\",\r\n            \"justify-content\"   : \"center\",\r\n            \"align-items\"       : \"center\"\r\n        },\r\n        element_svg : {\r\n            \"width\"             : \"100%\",\r\n            \"height\"            : \"100%\"\r\n        },\r\n        progress_fixed : {\r\n            \"position\"          : \"absolute\",\r\n            \"left\"              : \"0\",\r\n            \"width\"             : \"100%\"\r\n        },\r\n        progress_wrapper : {\r\n            \"position\"          : \"absolute\",\r\n            \"top\"               : \"0\",\r\n            \"left\"              : \"0\",\r\n            \"width\"             : \"100%\",\r\n            \"height\"            : \"100%\"\r\n        },\r\n        progress_bar : {\r\n            \"position\"          : \"absolute\",\r\n            \"left\"              : \"0\"\r\n        }\r\n    };\r\n    \r\n    // Data Template\r\n    var _dataTemplate = {\r\n        \"count\"             : 0,\r\n        \"container\"         : undefined,\r\n        \"settings\"          : undefined,\r\n        \"wholePage\"         : undefined,\r\n        \"resizeIntervalId\"  : undefined,\r\n        \"text\"              : undefined,\r\n        \"progress\"          : undefined\r\n    };\r\n    \r\n    // Whitelists\r\n    var _whitelists = {\r\n        animations : [\r\n            \"rotate_right\",\r\n            \"rotate_left\",\r\n            \"fadein\",\r\n            \"pulse\"\r\n        ],\r\n        progressPosition : [\r\n            \"top\",\r\n            \"bottom\"\r\n        ]\r\n    };\r\n    \r\n    // Default Values\r\n    var _defaultValues = {\r\n        animations : {\r\n            name    : \"rotate_right\",\r\n            time    : \"2000ms\"\r\n        },\r\n        fade : [400, 200]\r\n    };\r\n    \r\n    \r\n    $.LoadingOverlaySetup = function(settings){\r\n        $.extend(true, _defaults, settings);\r\n    };\r\n    \r\n    $.LoadingOverlay = function(action, options){\r\n        switch (action.toLowerCase()) {\r\n            case \"show\":\r\n                Show(\"body\", $.extend(true, {}, _defaults, options));\r\n                break;\r\n                \r\n            case \"hide\":\r\n                Hide(\"body\", options);\r\n                break;\r\n                \r\n            case \"resize\":\r\n                Resize(\"body\", options);\r\n                break;  \r\n                \r\n            case \"text\":\r\n                Text(\"body\", options);\r\n                break;\r\n                \r\n            case \"progress\":\r\n                Progress(\"body\", options);\r\n                break;\r\n        }\r\n    };\r\n    \r\n    $.fn.LoadingOverlay = function(action, options){\r\n        switch (action.toLowerCase()) {\r\n            case \"show\":\r\n                return this.each(function(){\r\n                    Show(this, $.extend(true, {}, _defaults, options));\r\n                });\r\n                \r\n            case \"hide\":\r\n                return this.each(function(){\r\n                    Hide(this, options);\r\n                });\r\n                \r\n             case \"resize\":\r\n                return this.each(function(){\r\n                    Resize(this, options);\r\n                });\r\n                \r\n            case \"text\":\r\n                return this.each(function(){\r\n                    Text(this, options);\r\n                });\r\n                \r\n            case \"progress\":\r\n                return this.each(function(){\r\n                    Progress(this, options);\r\n                });\r\n        }\r\n    };\r\n    \r\n    \r\n    function Show(container, settings){\r\n        container               = $(container);\r\n        settings.size           = _ParseSize(settings.size);\r\n        settings.maxSize        = parseInt(settings.maxSize, 10) || 0;\r\n        settings.minSize        = parseInt(settings.minSize, 10) || 0;\r\n        settings.resizeInterval = parseInt(settings.resizeInterval, 10) || 0;\r\n        \r\n        var overlay = _GetOverlay(container);\r\n        var data    = _GetData(container);\r\n        if (data === false) {\r\n            // Init data\r\n            data = $.extend({}, _dataTemplate);\r\n            data.container = container;\r\n            data.wholePage = container.is(\"body\");\r\n            \r\n            // Overlay\r\n            overlay = $(\"<div>\", {\r\n                \"class\" : \"loadingoverlay\"\r\n            })\r\n            .css(_css.overlay)\r\n            .css(\"flex-direction\", settings.direction.toLowerCase() === \"row\" ? \"row\" : \"column\");\r\n            if (settings.backgroundClass) {\r\n                overlay.addClass(settings.backgroundClass);\r\n            } else {\r\n                overlay.css(\"background\", settings.background);\r\n            }\r\n            if (data.wholePage) {\r\n                overlay.css({\r\n                    \"position\"  : \"fixed\",\r\n                    \"top\"       : 0,\r\n                    \"left\"      : 0,\r\n                    \"width\"     : \"100%\",\r\n                    \"height\"    : \"100%\"\r\n                });\r\n            }\r\n            if (typeof settings.zIndex !== \"undefined\") overlay.css(\"z-index\", settings.zIndex);\r\n            \r\n            // Image\r\n            if (settings.image) {\r\n                if ($.isArray(settings.imageColor)) {\r\n                    if (settings.imageColor.length === 0) {\r\n                        settings.imageColor = false;\r\n                    } else if (settings.imageColor.length  === 1) {\r\n                        settings.imageColor = {\r\n                            \"fill\"  : settings.imageColor[0]\r\n                        };\r\n                    } else {\r\n                        settings.imageColor = {\r\n                            \"fill\"      : settings.imageColor[0],\r\n                            \"stroke\"    : settings.imageColor[1]\r\n                        };\r\n                    }\r\n                } else if (settings.imageColor) {\r\n                    settings.imageColor = {\r\n                        \"fill\"  : settings.imageColor\r\n                    };\r\n                }\r\n                var element = _CreateElement(overlay, settings.imageOrder, settings.imageAutoResize, settings.imageResizeFactor, settings.imageAnimation);\r\n                if (settings.image.slice(0, 4).toLowerCase() === \"<svg\" && settings.image.slice(-6).toLowerCase() === \"</svg>\") {\r\n                    // Inline SVG\r\n                    element.append(settings.image);\r\n                    element.children().css(_css.element_svg);\r\n                    if (!settings.imageClass && settings.imageColor) element.find(\"*\").css(settings.imageColor);\r\n                } else if (settings.image.slice(-4).toLowerCase() === \".svg\" || settings.image.slice(0, 14).toLowerCase() === \"data:image/svg\") {\r\n                    // SVG file or base64-encoded SVG\r\n                    $.ajax({\r\n                        url         : settings.image,\r\n                        type        : \"GET\",\r\n                        dataType    : \"html\",\r\n                        global      : false\r\n                    }).done(function(data){\r\n                        element.html(data);\r\n                        element.children().css(_css.element_svg);\r\n                        if (!settings.imageClass && settings.imageColor) element.find(\"*\").css(settings.imageColor);\r\n                    });\r\n                } else {\r\n                    // Raster\r\n                    element.css({\r\n                        \"background-image\"      : \"url(\" + settings.image + \")\",\r\n                        \"background-position\"   : \"center\",\r\n                        \"background-repeat\"     : \"no-repeat\",\r\n                        \"background-size\"       : \"cover\"\r\n                    });\r\n                }\r\n                if (settings.imageClass) element.addClass(settings.imageClass);\r\n            }\r\n            \r\n            // Font Awesome\r\n            if (settings.fontawesome) {\r\n                var element = _CreateElement(overlay, settings.fontawesomeOrder, settings.fontawesomeAutoResize, settings.fontawesomeResizeFactor, settings.fontawesomeAnimation)\r\n                    .addClass(\"loadingoverlay_fa\");\r\n                $(\"<div>\", {\r\n                    \"class\" : settings.fontawesome\r\n                }).appendTo(element);\r\n                if (settings.fontawesomeColor) element.css(\"color\", settings.fontawesomeColor);\r\n            }\r\n            \r\n            // Custom\r\n            if (settings.custom) {\r\n                var element = _CreateElement(overlay, settings.customOrder, settings.customAutoResize, settings.customResizeFactor, settings.customAnimation)\r\n                    .append(settings.custom);\r\n            }\r\n            \r\n            // Text\r\n            if (settings.text) {\r\n                data.text = _CreateElement(overlay, settings.textOrder, settings.textAutoResize, settings.textResizeFactor, settings.textAnimation)\r\n                        .addClass(\"loadingoverlay_text\")\r\n                        .text(settings.text);\r\n                if (settings.textClass) {\r\n                    data.text.addClass(settings.textClass);\r\n                } else if (settings.textColor) {\r\n                    data.text.css(\"color\", settings.textColor);\r\n                }\r\n            }\r\n            \r\n            // Progress\r\n            if (settings.progress) {\r\n                var element = _CreateElement(overlay, settings.progressOrder, settings.progressAutoResize, settings.progressResizeFactor, false)\r\n                    .addClass(\"loadingoverlay_progress\");\r\n                var wrapper = $(\"<div>\")\r\n                    .css(_css.progress_wrapper)\r\n                    .appendTo(element);\r\n                data.progress = {\r\n                    bar     : $(\"<div>\").css(_css.progress_bar).appendTo(wrapper),\r\n                    fixed   : false,\r\n                    margin  : 0,\r\n                    min     : parseFloat(settings.progressMin),\r\n                    max     : parseFloat(settings.progressMax),\r\n                    speed   : parseInt(settings.progressSpeed, 10)\r\n                };\r\n                var progressPositionParts = (settings.progressFixedPosition + \"\").replace(/\\s\\s+/g, \" \").toLowerCase().split(\" \");\r\n                if (progressPositionParts.length === 2 && _ValidateProgressPosition(progressPositionParts[0])) {\r\n                    data.progress.fixed     = progressPositionParts[0];\r\n                    data.progress.margin    = _ParseSize(progressPositionParts[1]);\r\n                } else if (progressPositionParts.length === 2 && _ValidateProgressPosition(progressPositionParts[1])) {\r\n                    data.progress.fixed     = progressPositionParts[1];\r\n                    data.progress.margin    = _ParseSize(progressPositionParts[0]);\r\n                } else if (progressPositionParts.length === 1 && _ValidateProgressPosition(progressPositionParts[0])) {\r\n                    data.progress.fixed     = progressPositionParts[0];\r\n                    data.progress.margin    = 0;\r\n                }\r\n                if (data.progress.fixed === \"top\") {\r\n                    element\r\n                        .css(_css.progress_fixed)\r\n                        .css(\"top\", data.progress.margin ? data.progress.margin.value + (data.progress.margin.fixed ? data.progress.margin.units : \"%\") : 0);\r\n                } else if (data.progress.fixed === \"bottom\") {\r\n                    element\r\n                        .css(_css.progress_fixed)\r\n                        .css(\"top\", \"auto\");\r\n                }\r\n                if (settings.progressClass) {\r\n                    data.progress.bar.addClass(settings.progressClass);\r\n                } else if (settings.progressColor) {\r\n                    data.progress.bar.css(\"background\", settings.progressColor);\r\n                } \r\n            }\r\n            \r\n            // Fade\r\n            if (!settings.fade) {\r\n                settings.fade = [0, 0];\r\n            } else if (settings.fade === true) {\r\n                settings.fade = _defaultValues.fade;\r\n            } else if (typeof settings.fade === \"string\" || typeof settings.fade === \"number\") {\r\n                settings.fade = [settings.fade, settings.fade];\r\n            } else if ($.isArray(settings.fade) && settings.fade.length < 2) {\r\n                settings.fade = [settings.fade[0], settings.fade[0]];\r\n            }\r\n            settings.fade = [parseInt(settings.fade[0], 10), parseInt(settings.fade[1], 10)]\r\n            \r\n            \r\n            // Save settings\r\n            data.settings = settings;\r\n            // Save data\r\n            overlay.data(\"loadingoverlay_data\", data);\r\n            // Save reference to overlay\r\n            container.data(\"loadingoverlay\", overlay);\r\n            \r\n            \r\n            // Resize\r\n            overlay\r\n                .fadeTo(0, 0.01)\r\n                .appendTo(\"body\");\r\n            _IntervalResize(container, true);\r\n            if (settings.resizeInterval > 0) {\r\n                data.resizeIntervalId = setInterval(function(){\r\n                    _IntervalResize(container, false);\r\n                }, settings.resizeInterval);\r\n            }\r\n            \r\n            // Show LoadingOverlay\r\n            overlay.fadeTo(settings.fade[0], 1);\r\n        }\r\n        data.count++;\r\n    }\r\n    \r\n    function Hide(container, force){\r\n        container   = $(container);\r\n        var overlay = _GetOverlay(container);\r\n        var data    = _GetData(container);\r\n        if (data === false) return;\r\n        \r\n        data.count--;\r\n        if (force || data.count <= 0) {\r\n            overlay.animate({\r\n                \"opacity\"   : 0\r\n            }, data.settings.fade[1], function(){\r\n                if (data.resizeIntervalId) clearInterval(data.resizeIntervalId);\r\n                $(this).remove();\r\n                container.removeData(\"loadingoverlay\");\r\n            });\r\n        }\r\n    }\r\n    \r\n    function Resize(container){\r\n        _IntervalResize($(container), true);\r\n    }\r\n    \r\n    function Text(container, value){\r\n        container   = $(container);\r\n        var data    = _GetData(container);\r\n        if (data === false || !data.text) return;\r\n        \r\n        if (value === false) {\r\n            data.text.hide();\r\n        } else {\r\n            data.text\r\n                    .show()\r\n                    .text(value);\r\n        }\r\n    }\r\n    \r\n    function Progress(container, value){\r\n        container   = $(container);\r\n        var data    = _GetData(container);\r\n        if (data === false || !data.progress) return;\r\n        \r\n        if (value === false) {\r\n            data.progress.bar.hide();\r\n        } else {\r\n            var v = ((parseFloat(value) || 0) - data.progress.min) * 100 / (data.progress.max - data.progress.min);\r\n            if (v < 0)   v = 0;\r\n            if (v > 100) v = 100;\r\n            data.progress.bar\r\n                    .show()\r\n                    .animate({\r\n                        \"width\" : v + \"%\"\r\n                    }, data.progress.speed);\r\n        }\r\n    }\r\n    \r\n    \r\n    function _IntervalResize(container, force){\r\n        var overlay = _GetOverlay(container);\r\n        var data    = _GetData(container);\r\n        if (data === false) return;\r\n        \r\n        // Overlay\r\n        if (!data.wholePage) {\r\n            var isFixed = container.css(\"position\") === \"fixed\";\r\n            var pos     = isFixed ? container[0].getBoundingClientRect() : container.offset();            \r\n            overlay.css({\r\n                \"position\"  : isFixed ? \"fixed\" : \"absolute\",\r\n                \"top\"       : pos.top + parseInt(container.css(\"border-top-width\"), 10),\r\n                \"left\"      : pos.left + parseInt(container.css(\"border-left-width\"), 10),\r\n                \"width\"     : container.innerWidth(),\r\n                \"height\"    : container.innerHeight()\r\n            });\r\n        }\r\n        \r\n        // Elements\r\n        if (data.settings.size) {\r\n            var c    = data.wholePage ? $(window) : container;\r\n            var size = data.settings.size.value;\r\n            if (!data.settings.size.fixed) {\r\n                size = Math.min(c.innerWidth(), c.innerHeight()) * size / 100;\r\n                if (data.settings.maxSize && size > data.settings.maxSize) size = data.settings.maxSize;\r\n                if (data.settings.minSize && size < data.settings.minSize) size = data.settings.minSize;\r\n            }\r\n            overlay.children(\".loadingoverlay_element\").each(function(){\r\n                var $this = $(this);\r\n                if (force || $this.data(\"loadingoverlay_autoresize\")) {\r\n                    var resizeFactor = $this.data(\"loadingoverlay_resizefactor\");\r\n                    if ($this.hasClass(\"loadingoverlay_fa\") || $this.hasClass(\"loadingoverlay_text\")) {\r\n                        $this.css(\"font-size\", (size * resizeFactor) + data.settings.size.units);\r\n                    } else if ($this.hasClass(\"loadingoverlay_progress\")) {\r\n                        data.progress.bar.css(\"height\", (size * resizeFactor) + data.settings.size.units);\r\n                        if (!data.progress.fixed) {\r\n                            data.progress.bar\r\n                                .css(\"top\", $this.position().top)\r\n                                .css(\"top\", \"-=\" + (size * resizeFactor * 0.5) + data.settings.size.units);\r\n                        } else if (data.progress.fixed === \"bottom\") {\r\n                            $this\r\n                                .css(\"bottom\", data.progress.margin ? data.progress.margin.value + (data.progress.margin.fixed ? data.progress.margin.units : \"%\") : 0)\r\n                                .css(\"bottom\", \"+=\" + (size * resizeFactor) + data.settings.size.units);\r\n                        }\r\n                    } else {\r\n                        $this.css({\r\n                            \"width\"  : (size * resizeFactor) + data.settings.size.units,\r\n                            \"height\" : (size * resizeFactor) + data.settings.size.units\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    \r\n    \r\n    function _GetOverlay(container){\r\n        return container.data(\"loadingoverlay\");\r\n    }\r\n    \r\n    function _GetData(container){\r\n        var overlay = _GetOverlay(container);\r\n        var data    = (typeof overlay === \"undefined\") ? undefined : overlay.data(\"loadingoverlay_data\");\r\n        if (typeof data === \"undefined\") {\r\n            // Clean DOM\r\n            $(\".loadingoverlay\").each(function(){\r\n                var $this   = $(this);\r\n                var data    = $this.data(\"loadingoverlay_data\");\r\n                if (!document.body.contains(data.container[0])) {\r\n                    if (data.resizeIntervalId) clearInterval(data.resizeIntervalId);\r\n                    $this.remove();\r\n                }\r\n            });\r\n            return false;\r\n        } else {\r\n            overlay.toggle(container.is(\":visible\"));\r\n            return data;\r\n        }\r\n    }\r\n    \r\n    \r\n    function _CreateElement(overlay, order, autoResize, resizeFactor, animation){\r\n        var element = $(\"<div>\", {\r\n            \"class\" : \"loadingoverlay_element\",\r\n            \"css\"   : {\r\n                \"order\" : order\r\n            }\r\n        })\r\n        .css(_css.element)\r\n        .data({\r\n            \"loadingoverlay_autoresize\"     : autoResize,\r\n            \"loadingoverlay_resizefactor\"   : resizeFactor\r\n        })\r\n        .appendTo(overlay);\r\n        \r\n        // Parse animation\r\n        if (animation === true) animation = _defaultValues.animations.time + \" \" + _defaultValues.animations.name;\r\n        if (typeof animation === \"string\") {\r\n            var animationName;\r\n            var animationTime;\r\n            var parts = animation.replace(/\\s\\s+/g, \" \").toLowerCase().split(\" \");\r\n            if (parts.length === 2 && _ValidateCssTime(parts[0]) && _ValidateAnimation(parts[1])) {\r\n                animationName = parts[1];\r\n                animationTime = parts[0];\r\n            } else if (parts.length === 2 && _ValidateCssTime(parts[1]) && _ValidateAnimation(parts[0])) {\r\n                animationName = parts[0];\r\n                animationTime = parts[1];\r\n            } else if (parts.length === 1 && _ValidateCssTime(parts[0])) {\r\n                animationName = _defaultValues.animations.name;\r\n                animationTime = parts[0];\r\n            } else if (parts.length === 1 && _ValidateAnimation(parts[0])) {\r\n                animationName = parts[0];\r\n                animationTime = _defaultValues.animations.time;\r\n            }\r\n            element.css({\r\n                \"animation-name\"            : \"loadingoverlay_animation__\" + animationName,\r\n                \"animation-duration\"        : animationTime,\r\n                \"animation-timing-function\" : \"linear\",\r\n                \"animation-iteration-count\" : \"infinite\"\r\n            });\r\n        }\r\n        \r\n        return element;\r\n    }\r\n    \r\n    function _ValidateCssTime(value){\r\n        return !isNaN(parseFloat(value)) && (value.slice(-1) === \"s\" || value.slice(-2) === \"ms\");\r\n    }\r\n    \r\n    function _ValidateAnimation(value){\r\n        return _whitelists.animations.indexOf(value) > -1;\r\n    }\r\n    \r\n    function _ValidateProgressPosition(value){\r\n        return _whitelists.progressPosition.indexOf(value) > -1;\r\n    }\r\n    \r\n    \r\n    function _ParseSize(value){\r\n        if (!value || value < 0) {\r\n            return false;\r\n        } else if (typeof value === \"string\" && [\"vmin\", \"vmax\"].indexOf(value.slice(-4)) > -1) {\r\n            return {\r\n                fixed   : true,\r\n                units   : value.slice(-4),\r\n                value   : value.slice(0, -4)\r\n            };\r\n        } else if (typeof value === \"string\" && [\"rem\"].indexOf(value.slice(-3)) > -1) {\r\n            return {\r\n                fixed   : true,\r\n                units   : value.slice(-3),\r\n                value   : value.slice(0, -3)\r\n            };\r\n        } else if (typeof value === \"string\" && [\"px\", \"em\", \"cm\", \"mm\", \"in\", \"pt\", \"pc\", \"vh\", \"vw\"].indexOf(value.slice(-2)) > -1) {\r\n            return {\r\n                fixed   : true,\r\n                units   : value.slice(-2),\r\n                value   : value.slice(0, -2)\r\n            };\r\n        } else {\r\n            return {\r\n                fixed   : false,\r\n                units   : \"px\",\r\n                value   : parseFloat(value)\r\n            }; \r\n        }\r\n    }\r\n    \r\n    \r\n    $(function(){\r\n        $(\"head\").append([\r\n            \"<style>\",\r\n                \"@-webkit-keyframes loadingoverlay_animation__rotate_right {\",\r\n                  \"to {\",\r\n                    \"-webkit-transform : rotate(360deg);\",\r\n                            \"transform : rotate(360deg);\",\r\n                  \"}\",\r\n                \"}\",\r\n                \"@keyframes loadingoverlay_animation__rotate_right {\",\r\n                  \"to {\",\r\n                    \"-webkit-transform : rotate(360deg);\",\r\n                            \"transform : rotate(360deg);\",\r\n                  \"}\",\r\n                \"}\",\r\n                \r\n                \"@-webkit-keyframes loadingoverlay_animation__rotate_left {\",\r\n                  \"to {\",\r\n                    \"-webkit-transform : rotate(-360deg);\",\r\n                            \"transform : rotate(-360deg);\",\r\n                  \"}\",\r\n                \"}\",\r\n                \"@keyframes loadingoverlay_animation__rotate_left {\",\r\n                  \"to {\",\r\n                    \"-webkit-transform : rotate(-360deg);\",\r\n                            \"transform : rotate(-360deg);\",\r\n                  \"}\",\r\n                \"}\",\r\n                \r\n                \"@-webkit-keyframes loadingoverlay_animation__fadein {\",\r\n                  \"0% {\",\r\n                            \"opacity   : 0;\",\r\n                    \"-webkit-transform : scale(0.1, 0.1);\",\r\n                            \"transform : scale(0.1, 0.1);\",\r\n                  \"}\",\r\n                  \"50% {\",\r\n                            \"opacity   : 1;\",\r\n                  \"}\",\r\n                  \"100% {\",\r\n                            \"opacity   : 0;\",\r\n                    \"-webkit-transform : scale(1, 1);\",\r\n                            \"transform : scale(1, 1);\",\r\n                  \"}\",\r\n                \"}\",\r\n                \"@keyframes loadingoverlay_animation__fadein {\",\r\n                  \"0% {\",\r\n                            \"opacity   : 0;\",\r\n                    \"-webkit-transform : scale(0.1, 0.1);\",\r\n                            \"transform : scale(0.1, 0.1);\",\r\n                  \"}\",\r\n                  \"50% {\",\r\n                            \"opacity   : 1;\",\r\n                  \"}\",\r\n                  \"100% {\",\r\n                            \"opacity   : 0;\",\r\n                    \"-webkit-transform : scale(1, 1);\",\r\n                            \"transform : scale(1, 1);\",\r\n                  \"}\",\r\n                \"}\",\r\n                \r\n                \"@-webkit-keyframes loadingoverlay_animation__pulse {\",\r\n                  \"0% {\",\r\n                    \"-webkit-transform : scale(0, 0);\",\r\n                            \"transform : scale(0, 0);\",\r\n                  \"}\",\r\n                  \"50% {\",\r\n                    \"-webkit-transform : scale(1, 1);\",\r\n                            \"transform : scale(1, 1);\",\r\n                  \"}\",\r\n                  \"100% {\",\r\n                    \"-webkit-transform : scale(0, 0);\",\r\n                            \"transform : scale(0, 0);\",\r\n                  \"}\",\r\n                \"}\",\r\n                \"@keyframes loadingoverlay_animation__pulse {\",\r\n                  \"0% {\",\r\n                    \"-webkit-transform : scale(0, 0);\",\r\n                            \"transform : scale(0, 0);\",\r\n                  \"}\",\r\n                  \"50% {\",\r\n                    \"-webkit-transform : scale(1, 1);\",\r\n                            \"transform : scale(1, 1);\",\r\n                  \"}\",\r\n                  \"100% {\",\r\n                    \"-webkit-transform : scale(0, 0);\",\r\n                            \"transform : scale(0, 0);\",\r\n                  \"}\",\r\n                \"}\",\r\n            \"</style>\"\r\n        ].join(\" \"));\r\n    });\r\n    \r\n}));"]}